{"version":3,"file":"CurrentOrganizationLink.efa127d5.js","sources":["../../../src/Services/OrganizationService.js","../../../src/Contexts/currentOrganizationContext.jsx","../../../src/Components/Helpers/CurrentOrganizationLink.jsx"],"sourcesContent":["import { mapUser } from \"./Auth/LoginService\";\n\nconst mapOrganization = (apiOrganization) => ({\n  createdAt: new Date(apiOrganization.created_at),\n  id: apiOrganization.id,\n  name: apiOrganization.name,\n  updatedAt: new Date(apiOrganization.updated_at),\n});\n\nexport const getUserOrganizations = (apiClient) => {\n  return apiClient\n    .get(`/organizations`)\n    .then((response) => response.data.map(mapOrganization));\n};\n\nexport const getOrganization = (apiClient, organizationId) => {\n  return apiClient\n    .get(`/organizations/${organizationId}`)\n    .then((response) => mapOrganization(response.data));\n};\n\nexport const getAllOrganizationUsers = async (organizationClient) => {\n  return organizationClient\n    .get(`/users`)\n    .then((response) => response.data.map(mapUser));\n};\n","import React, {\n  useContext,\n  createContext,\n  useEffect,\n  useState,\n  useCallback,\n} from \"react\";\nimport axios from \"axios\";\nimport { useCurrentUser } from \"./currentUserContext\";\nimport apiClient from \"../config/apiClient\";\nimport {\n  getOrganization,\n  getUserOrganizations,\n} from \"../Services/OrganizationService\";\n\nexport const CurrentOrganizationContext = createContext();\n\nexport const useCurrentOrganization = () =>\n  useContext(CurrentOrganizationContext);\n\nexport const CurrentOrganizationProvider = ({ children }) => {\n  const [organizations, setOrganizations] = useState([]);\n  const [currentOrganization, setCurrentOrganization] = useState();\n  const [organizationClient, setOrganizationClient] = useState();\n  const [isLoadingOrganization, setIsLoadingOrganization] = useState(false);\n  const { user, authenticatedApiClient } = useCurrentUser();\n\n  const fetchUserOrganizations = useCallback(async () => {\n    const organizations = await getUserOrganizations(authenticatedApiClient);\n    setOrganizations(organizations);\n  }, [authenticatedApiClient]);\n\n  const fetchCurrentOrganization = async (organizationId) => {\n    try {\n      setIsLoadingOrganization(true);\n\n      const organizationClient = axios.create({\n        ...authenticatedApiClient.defaults,\n        baseURL: `${apiClient.defaults.baseURL}/organizations/${organizationId}`,\n      });\n      setOrganizationClient(() => organizationClient);\n\n      const organization = await getOrganization(\n        authenticatedApiClient,\n        organizationId\n      );\n      setCurrentOrganization(organization);\n    } finally {\n      setIsLoadingOrganization(false);\n    }\n  };\n\n  const context = {\n    currentOrganization,\n    fetchCurrentOrganization,\n    fetchUserOrganizations,\n    isLoadingOrganization,\n    organizationClient,\n    organizations,\n  };\n\n  useEffect(() => {\n    if (user) {\n      fetchUserOrganizations();\n    }\n  }, [user, fetchUserOrganizations]);\n\n  return (\n    <CurrentOrganizationContext.Provider value={context}>\n      {children}\n    </CurrentOrganizationContext.Provider>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { useCurrentOrganization } from \"../../Contexts/currentOrganizationContext\";\n\nexport default function CurrentOrganizationLink(props) {\n  const { as: Component, to, ...restProps } = props;\n  const { currentOrganization } = useCurrentOrganization();\n\n  return (\n    <Component\n      {...restProps}\n      to={`/organizations/${currentOrganization.id}${to}`}\n    />\n  );\n}\n\nCurrentOrganizationLink.propTypes = {\n  as: PropTypes.elementType,\n  to: PropTypes.string.isRequired,\n};\n\nCurrentOrganizationLink.defaultProps = {\n  as: Link,\n};\n"],"names":["CurrentOrganizationContext","createContext","useCurrentOrganization","useContext","CurrentOrganizationProvider","children","organizations","setOrganizations","useState","currentOrganization","setCurrentOrganization","organizationClient","setOrganizationClient","isLoadingOrganization","setIsLoadingOrganization","user","authenticatedApiClient","useCurrentUser","fetchUserOrganizations","useCallback","getUserOrganizations","context","fetchCurrentOrganization","organizationId","axios","create","defaults","baseURL","apiClient","organization","getOrganization","useEffect","_jsx","props","as","Component","to","restProps","id","CurrentOrganizationLink","propTypes","PropTypes","elementType","string","isRequired","defaultProps","Link"],"mappings":"mNAEA,KAAM,GAAkB,AAAC,GAAqB,EAC5C,UAAW,GAAI,MAAK,EAAgB,UAAU,EAC9C,GAAI,EAAgB,GACpB,KAAM,EAAgB,KACtB,UAAW,GAAI,MAAK,EAAgB,UAAU,CAChD,GAEa,EAAuB,AAAC,GAC5B,EACJ,IAAI,gBAAgB,EACpB,KAAK,AAAC,GAAa,EAAS,KAAK,IAAI,CAAe,CAAC,EAG7C,EAAkB,CAAC,EAAW,IAClC,EACJ,IAAI,kBAAkB,GAAgB,EACtC,KAAK,AAAC,GAAa,EAAgB,EAAS,IAAI,CAAC,ECHzCA,EAA6BC,EAAnC,QAAA,cAAA,EAEMC,EAAyB,IACpCC,EAAAA,QAAAA,WAAWH,CAAD,EAECI,EAA8B,CAAC,CAAEC,cAAe,CAC3D,KAAM,CAACC,EAAeC,GAAoBC,EAAAA,QAAAA,SAAS,CAAD,CAAA,EAC5C,CAACC,EAAqBC,GAA0BF,EAAtD,QAAA,SAAA,EACM,CAACG,EAAoBC,GAAyBJ,EAApD,QAAA,SAAA,EACM,CAACK,EAAuBC,GAA4BN,EAAAA,QAAAA,SAAS,EAAD,EAC5D,CAAEO,OAAMC,0BAA2BC,EAAzC,EAEMC,EAAyBC,EAAAA,QAAAA,YAAY,SAAY,CAC/Cb,KAAAA,GAAgB,KAAMc,GAAqBJ,CAAD,EAChDT,EAAiBD,CAAD,CAAA,EACf,CAACU,CAAD,CAHuC,EAyBpCK,EAAU,CACdZ,sBACAa,yBAtB+B,KAAOC,IAAmB,CACrD,GAAA,CACFT,EAAyB,EAAD,EAElBH,KAAAA,GAAqBa,EAAMC,OAAO,CACtC,GAAGT,EAAuBU,SAC1BC,QAAU,GAAEC,EAAUF,SAASC,yBAAyBJ,GAAAA,CAF/B,EAI3BX,EAAsB,IAAMD,CAAP,EAErB,KAAMkB,GAAe,KAAMC,GACzBd,EACAO,CAFwC,EAI1Cb,EAAuBmB,CAAD,CAAA,QACd,CACRf,EAAyB,EAAD,CACzB,CAAA,EAMDI,yBACAL,wBACAF,qBACAL,eAAAA,EAGFyB,SAAAA,QAAAA,UAAU,IAAM,CACd,AAAIhB,GACoB,GACvB,EACA,CAACA,EAAMG,CAAP,CAJM,EAOPc,EAAC,EAA2B,SAA5B,CAAqC,MAAOX,EAA5C,UAAA,CADF,CAKD,uFCnED,WAAgDY,EAAO,CAC/C,KAAA,CAAEC,GAAIC,EAAWC,QAAOC,GAAcJ,EACtC,CAAExB,uBAAwBP,EAAhC,EAEA,SACG,EAAD,CAAA,GACMmC,EACJ,GAAK,kBAAiB5B,EAAoB6B,KAAKF,GAAAA,CAHnD,CAMD,CAEDG,EAAwBC,UAAY,CAClCN,GAAIO,EAAUC,QAAAA,YACdN,GAAIK,EAAAA,QAAUE,OAAOC,UAFa,EAKpCL,EAAwBM,aAAe,CACrCX,GAAIY,CADiC"}