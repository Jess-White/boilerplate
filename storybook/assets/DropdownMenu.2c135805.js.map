{"version":3,"file":"DropdownMenu.2c135805.js","sources":["../../../src/Components/design/Dropdown/DropdownContext.js","../../../src/Components/design/Dropdown/DropdownMenuItem.jsx","../../../src/Components/design/Dropdown/DropdownMenu.jsx"],"sourcesContent":["import { createContext } from \"react\";\n\nconst DropdownContext = createContext();\n\nexport default DropdownContext;\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Button from \"../Button/Button\";\nimport DropdownContext from \"./DropdownContext\";\nimport \"./Dropdown.css\";\n\nexport default function DropdownMenuItem(props) {\n  const { option, index } = props;\n  const {\n    options,\n    selectedOption,\n    setSelectedOption,\n    focusedOption,\n    setFocusedOption,\n    isMenuOpen,\n    setIsMenuOpen,\n    labelId,\n  } = useContext(DropdownContext);\n  const menuItemButtonEl = useRef(null);\n  const isSelected = option === selectedOption;\n  const isFocused = option === focusedOption;\n\n  useEffect(() => {\n    if (isMenuOpen && isFocused) {\n      //eslint-disable-next-line\n      menuItemButtonEl?.current?.focus();\n    }\n  }, [isFocused, isMenuOpen]);\n\n  return (\n    <li\n      className={clsx(\n        \"dropdown__menu-item\",\n        isSelected && \"dropdown__menu-item--selected\"\n      )}\n      role=\"option\"\n      aria-selected={isSelected}\n    >\n      <Button\n        ref={menuItemButtonEl}\n        variant=\"none\"\n        aria-labelledby={labelId}\n        onClick={() => {\n          setSelectedOption(option);\n          setIsMenuOpen(false);\n        }}\n        onKeyDown={(event) => {\n          if (event.key === \"ArrowUp\" && index > 0) {\n            setFocusedOption(options[index - 1]);\n          } else if (event.key === \"ArrowDown\" && index < options.length - 1) {\n            setFocusedOption(options[index + 1]);\n          }\n        }}\n      >\n        {option.label}\n      </Button>\n    </li>\n  );\n}\n\nexport const optionPropType = PropTypes.shape({\n  value: PropTypes.any.isRequired,\n  label: PropTypes.string,\n});\n\nDropdownMenuItem.propTypes = {\n  option: optionPropType.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nDropdownMenuItem.defaultProps = {};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport DropdownMenuItem, { optionPropType } from \"./DropdownMenuItem\";\nimport \"./Dropdown.css\";\n\nexport default function DropdownMenu(props) {\n  const { options, className, ...restProps } = props;\n\n  return (\n    <ul\n      {...restProps}\n      className={clsx(className, \"dropdown__menu\")}\n      role=\"listbox\"\n    >\n      {options?.map((option, index) => (\n        <DropdownMenuItem key={index} option={option} index={index} />\n      ))}\n    </ul>\n  );\n}\n\nDropdownMenu.propTypes = {\n  options: PropTypes.arrayOf(optionPropType).isRequired,\n};\n\nDropdownMenu.defaultProps = {};\n"],"names":["createContext","props","option","index","options","selectedOption","setSelectedOption","focusedOption","setFocusedOption","isMenuOpen","setIsMenuOpen","labelId","useContext","DropdownContext","menuItemButtonEl","useRef","isSelected","isFocused","useEffect","current","focus","clsx","event","key","length","label","optionPropType","PropTypes","shape","value","any","isRequired","string","DropdownMenuItem","propTypes","number","defaultProps","className","restProps","map","DropdownMenu","arrayOf"],"mappings":"gNAEA,KAAM,GAAkBA,EAAa,QAAA,cAAA,EAErC,GAAA,GAAe,ECGf,WAAAC,EAAA,CACA,KAAA,CAAAC,SAAAC,SAAAF,EACA,CACAG,UACAC,iBACAC,oBACAC,gBACAC,mBACAC,aACAC,gBACAC,WACAC,EAAAA,QAAAA,WAAAC,CAAA,EACAC,EAAAC,iBAAA,IAAA,EACAC,EAAAd,IAAAG,EACAY,EAAAf,IAAAK,EAEAW,SAAAA,QAAAA,UAAA,IAAA,OACA,AAAAT,GAAAQ,GAEAH,qBAAAK,UAAAL,QAAAM,QACA,EACA,CAAAH,EAAAR,CAAA,CALA,IAQA,KAAA,CACA,UAAAY,EACA,sBACAL,GAAA,+BAFA,EAIA,KAAA,SACA,gBAAAA,EANA,WAQA,EAAA,CACA,IAAAF,EACA,QAAA,OACA,kBAAAH,EACA,QAAA,IAAA,CACAL,EAAAJ,CAAA,EACAQ,EAAA,EAAA,CACA,EACA,UAAAY,AAAA,GAAA,CACA,AAAAA,EAAAC,MAAA,WAAApB,EAAA,EACAC,EAAAA,EAAAD,EAAA,EAAA,EACAmB,EAAAC,MAAA,aAAApB,EAAAC,EAAAoB,OAAA,GACApB,EAAAA,EAAAD,EAAA,EAAA,CAEA,EAdA,SAgBAD,EAAAuB,KAAAA,CAhBA,CAAA,CATA,CA6BA,CAEAC,KAAAA,GAAAC,EAAAC,MAAA,CACAC,MAAAF,EAAAG,IAAAC,WACAN,MAAAE,EAAAK,MAFA,CAAA,EAKAC,EAAAC,UAAA,CACAhC,OAAAwB,EAAAK,WACA5B,MAAAwB,EAAAQ,OAAAJ,UAFA,EAKAE,EAAAG,aAAA,CAAA,qOCjEA,WAAAnC,EAAA,CACA,KAAA,CAAAG,UAAAiC,eAAAC,GAAArC,EAEA,kBAEAqC,EACA,UAAAjB,EAAAgB,EAAA,gBAAA,EACA,KAAA,UAHA,SAKAjC,iBAAAmC,IAAA,CAAArC,EAAAC,MACA,EAAA,CAAA,SAAA,OAAA,EAAAA,CAAA,EADA,CANA,CAWA,CAEAqC,EAAAN,UAAA,CACA9B,QAAAuB,EAAAc,QAAAf,CAAA,EAAAK,UADA,EAIAS,EAAAJ,aAAA,CAAA"}