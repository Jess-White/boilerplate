{"version":3,"file":"Button.4d99bcbe.js","sources":["../../../src/Components/design/Button/Button.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport \"./Button.css\";\n\nexport const ButtonVariant = {\n  Contained: \"contained\",\n  Outlined: \"outlined\",\n  Text: \"text\",\n  None: \"none\",\n  UserIcon: \"usericon\",\n  SignIn: \"signin\",\n  ModalCancelButton: \"modalcancelbutton\",\n};\nexport const ButtonColor = {\n  Primary: \"primary\",\n  Success: \"success\",\n  Error: \"error\",\n  Contrast: \"contrast\",\n};\n\nconst Button = React.forwardRef((props, ref) => {\n  const { variant, color, children, as: Component, ...restProps } = props;\n\n  return (\n    <Component\n      {...restProps}\n      ref={ref}\n      className={clsx(\n        props.className,\n        \"button\",\n        `button--${variant}`,\n        `button--${color}`,\n        props.disabled && \"button--disabled\"\n      )}\n    >\n      {Array.isArray(children)\n        ? children.map((child, index) => {\n            // Wrap text nodes in span for styling with icons.\n            if (typeof child === \"string\") {\n              return <span key={index}>{child}</span>;\n            }\n            return child;\n          })\n        : children}\n    </Component>\n  );\n});\n\nButton.propTypes = {\n  as: PropTypes.elementType,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  color: PropTypes.oneOf(Object.values(ButtonColor)),\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  tabIndex: PropTypes.number,\n  type: PropTypes.oneOf([\"button\", \"reset\", \"submit\"]),\n  variant: PropTypes.oneOf(Object.values(ButtonVariant)),\n};\n\nButton.defaultProps = {\n  as: \"button\",\n  color: ButtonColor.Primary,\n  disabled: false,\n  type: \"button\",\n  variant: ButtonVariant.Contained,\n};\n\nexport default Button;\n"],"names":["ButtonVariant","Contained","Outlined","Text","None","UserIcon","SignIn","ModalCancelButton","ButtonColor","Primary","Success","Error","Contrast","Button","React","forwardRef","props","ref","variant","color","children","as","Component","restProps","clsx","className","disabled","Array","isArray","map","child","index","propTypes","PropTypes","elementType","string","node","oneOf","Object","values","bool","onClick","func","tabIndex","number","type","defaultProps"],"mappings":"uKAKA,KAAAA,GAAA,CACAC,UAAA,YACAC,SAAA,WACAC,KAAA,OACAC,KAAA,OACAC,SAAA,WACAC,OAAA,SACAC,kBAAA,mBAPA,EASAC,EAAA,CACAC,QAAA,UACAC,QAAA,UACAC,MAAA,QACAC,SAAA,UAJA,EAOAC,EAAAC,EAAAC,WAAA,CAAAC,EAAAC,IAAA,CACA,KAAA,CAAAC,UAAAC,QAAAC,WAAAC,GAAAC,KAAAC,GAAAP,EAEA,SACA,EAAA,CAAA,GACAO,EACA,MACA,UAAAC,EACAR,EAAAS,UACA,SACA,WAAAP,IACA,WAAAC,IACAH,EAAAU,UAAA,kBALA,EAHA,SAWAC,MAAAC,QAAAR,CAAA,EACAA,EAAAS,IAAA,CAAAC,EAAAC,IAEA,MAAAD,IAAA,WACA,OAAA,CAAA,SAAAA,GAAAC,CAAA,EAEAD,CALA,EAOAV,CAAAA,CApBA,CAuBA,CA1BA,EA4BAP,EAAAmB,UAAA,CACAX,GAAAY,EAAAC,YACAT,UAAAQ,EAAAE,OACAf,SAAAa,EAAAG,KACAjB,MAAAc,EAAAI,MAAAC,OAAAC,OAAA/B,CAAA,CAAA,EACAkB,SAAAO,EAAAO,KACAC,QAAAR,EAAAS,KACAC,SAAAV,EAAAW,OACAC,KAAAZ,EAAAI,MAAA,CAAA,SAAA,QAAA,QAAA,CAAA,EACAnB,QAAAe,EAAAI,MAAAC,OAAAC,OAAAvC,CAAA,CAAA,CATA,EAYAa,EAAAiC,aAAA,CACAzB,GAAA,SACAF,MAAAX,EAAAC,QACAiB,SAAA,GACAmB,KAAA,SACA3B,QAAAlB,EAAAC,SALA,EAQA,GAAA,GAAAY"}