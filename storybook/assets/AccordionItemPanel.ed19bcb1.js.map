{"version":3,"file":"AccordionItemPanel.ed19bcb1.js","sources":["../../../src/Components/design/Accordion/AccordionItem/AccordionItemContext.js","../../../src/Components/design/Accordion/AccordionItem/AccordionItem.jsx","../../../src/Components/design/Accordion/AccordionItem/AccordionItemHeader.jsx","../../../src/Components/design/Accordion/AccordionItem/AccordionItemPanel.jsx"],"sourcesContent":["import { createContext } from \"react\";\n\nconst AccordionItemContext = createContext();\n\nexport default AccordionItemContext;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { useId } from \"react-aria\";\nimport AccordionItemContext from \"./AccordionItemContext\";\nimport \"./AccordionItem.css\";\n\nexport default function AccordionItem(props) {\n  const { as: Component, className, children } = props;\n  const [expanded, setExpanded] = useState(false);\n  const state = {\n    expanded,\n    setExpanded,\n    headerId: useId(),\n    panelId: useId(),\n  };\n\n  return (\n    <AccordionItemContext.Provider value={state}>\n      <Component className={clsx(className, \"accordion-item\")}>\n        {children}\n      </Component>\n    </AccordionItemContext.Provider>\n  );\n}\n\nAccordionItem.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  as: PropTypes.node,\n};\n\nAccordionItem.defaultProps = {\n  as: \"div\",\n};\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { MdChevronRight, MdExpandMore } from \"react-icons/md\";\nimport AccordionItemContext from \"./AccordionItemContext\";\nimport Button from \"../../Button/Button\";\n\nexport default function AccordionItemHeader(props) {\n  const { heading: Heading, className, children } = props;\n  const { expanded, setExpanded, panelId, headerId } =\n    useContext(AccordionItemContext);\n  const Icon = expanded ? MdExpandMore : MdChevronRight;\n\n  return (\n    <Heading className={clsx(className, \"accordion-item__header\")}>\n      <Button\n        id={headerId}\n        variant=\"none\"\n        onClick={() => setExpanded(!expanded)}\n        aria-expanded={expanded}\n        aria-controls={panelId}\n        className={clsx(props.buttonClassName, \"accordion-item__header-button\")}\n      >\n        <Icon className=\"accordion-item__icon\" />\n        {children}\n      </Button>\n    </Heading>\n  );\n}\n\nAccordionItemHeader.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  heading: PropTypes.oneOf([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]),\n};\n\nAccordionItemHeader.defaultProps = {\n  heading: \"h1\",\n};\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport AccordionItemContext from \"./AccordionItemContext\";\n\nexport default function AccordionItemPanel(props) {\n  const { expanded, panelId, headerId } = useContext(AccordionItemContext);\n  const { className, children } = props;\n\n  return (\n    <section\n      id={panelId}\n      aria-labelledby={headerId}\n      hidden={!expanded}\n      className={clsx(className, \"accordion-item__panel\")}\n    >\n      {children}\n    </section>\n  );\n}\n\nAccordionItemPanel.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nAccordionItemPanel.defaultProps = {};\n"],"names":["createContext","props","as","Component","className","children","expanded","setExpanded","useState","state","headerId","useId","panelId","_jsx","AccordionItemContext","clsx","AccordionItem","propTypes","PropTypes","string","node","defaultProps","heading","Heading","useContext","Icon","MdExpandMore","MdChevronRight","buttonClassName","AccordionItemHeader","oneOf","AccordionItemPanel"],"mappings":"mTAEA,KAAM,GAAuBA,EAAa,QAAA,cAAA,EAE1C,GAAA,GAAe,ECGf,WAAAC,EAAA,CACA,KAAA,CAAAC,GAAAC,EAAAC,YAAAC,YAAAJ,EACA,CAAAK,EAAAC,GAAAC,EAAAA,QAAAA,SAAA,EAAA,EACAC,EAAA,CACAH,WACAC,cACAG,SAAAC,EAHA,EAIAC,QAAAD,EAAA,CAAA,EAIA,MAAAE,GAAAC,EAAA,SAAA,CAAA,MAAAL,EAAA,WACA,EAAA,CAAA,UAAAM,EAAAX,EAAA,gBAAA,EAAA,UAAA,CAAA,CAAA,CAFA,CAOA,CAEAY,EAAAC,UAAA,CACAb,UAAAc,EAAAC,OACAd,SAAAa,EAAAE,KACAlB,GAAAgB,EAAAE,IAHA,EAMAJ,EAAAK,aAAA,CACAnB,GAAA,KADA,kSCzBA,WAAAD,EAAA,CACA,KAAA,CAAAqB,QAAAC,EAAAnB,YAAAC,YAAAJ,EACA,CAAAK,WAAAC,cAAAK,UAAAF,YACAc,EAAAA,QAAAA,WAAAV,CAAA,EACAW,EAAAnB,EAAAoB,EAAAC,EAEA,SACA,EAAA,CAAA,UAAAZ,EAAAX,EAAA,wBAAA,EAAA,WACA,EAAA,CACA,GAAAM,EACA,QAAA,OACA,QAAA,IAAAH,EAAA,CAAAD,CAAA,EACA,gBAAAA,EACA,gBAAAM,EACA,UAAAG,EAAAd,EAAA2B,gBAAA,+BAAA,EANA,SAAA,CAQAf,EAAA,EAAA,CAAA,UAAA,sBAAA,CAAA,EACAR,CATA,CAAA,CAAA,CAAA,CAFA,CAeA,CAEAwB,EAAAZ,UAAA,CACAb,UAAAc,EAAAC,OACAd,SAAAa,EAAAE,KACAE,QAAAJ,EAAAY,MAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,IAAA,CAAA,CAHA,EAMAD,EAAAR,aAAA,CACAC,QAAA,IADA,sdC/BA,WAAArB,EAAA,CACA,KAAA,CAAAK,WAAAM,UAAAF,YAAAc,EAAAA,QAAAA,WAAAV,CAAA,EACA,CAAAV,YAAAC,YAAAJ,EAEA,SACA,UAAA,CACA,GAAAW,EACA,kBAAAF,EACA,OAAA,CAAAJ,EACA,UAAAS,EAAAX,EAAA,uBAAA,EAJA,UAAA,CADA,CAUA,CAEA2B,EAAAd,UAAA,CACAb,UAAAc,EAAAC,OACAd,SAAAa,EAAAE,IAFA,EAKAW,EAAAV,aAAA,CAAA"}