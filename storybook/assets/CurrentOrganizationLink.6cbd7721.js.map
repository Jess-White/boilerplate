{"version":3,"file":"CurrentOrganizationLink.6cbd7721.js","sources":["../../../src/Contexts/currentOrganizationContext.jsx","../../../src/Components/Helpers/CurrentOrganizationLink.jsx"],"sourcesContent":["import React, { useContext, createContext, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { useCurrentUser } from \"./currentUserContext\";\nimport { getOrganization } from \"../Services/OrganizationService\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\n\nexport const CurrentOrganizationContext = createContext();\n\nexport const useCurrentOrganization = () =>\n  useContext(CurrentOrganizationContext);\n\nexport const CurrentOrganizationProvider = ({ children }) => {\n  const { organizationId } = useParams();\n  const { authenticatedApiClient } = useCurrentUser();\n\n  const organizationClient = useMemo(\n    () =>\n      axios.create({\n        ...authenticatedApiClient.defaults,\n        baseURL: `${authenticatedApiClient.defaults.baseURL}/organizations/${organizationId}`,\n      }),\n    [authenticatedApiClient, organizationId]\n  );\n\n  const { data: currentOrganization } = useQuery(\n    [\"currentOrganization\", authenticatedApiClient, organizationId],\n    () => getOrganization(authenticatedApiClient, organizationId)\n  );\n\n  const context = {\n    currentOrganization,\n    organizationClient,\n  };\n\n  return (\n    <CurrentOrganizationContext.Provider value={context}>\n      {children}\n    </CurrentOrganizationContext.Provider>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { useCurrentOrganization } from \"../../Contexts/currentOrganizationContext\";\n\nexport default function CurrentOrganizationLink(props) {\n  const { as: Component, to, ...restProps } = props;\n  const { currentOrganization } = useCurrentOrganization();\n\n  return (\n    <Component\n      {...restProps}\n      to={`/organizations/${currentOrganization.id}${to}`}\n    />\n  );\n}\n\nCurrentOrganizationLink.propTypes = {\n  as: PropTypes.elementType,\n  to: PropTypes.string.isRequired,\n};\n\nCurrentOrganizationLink.defaultProps = {\n  as: Link,\n};\n"],"names":["CurrentOrganizationContext","createContext","useCurrentOrganization","useContext","CurrentOrganizationProvider","children","organizationId","useParams","authenticatedApiClient","useCurrentUser","organizationClient","useMemo","axios","create","defaults","baseURL","data","currentOrganization","useQuery","getOrganization","context","_jsx","props","as","Component","to","restProps","id","CurrentOrganizationLink","propTypes","PropTypes","elementType","string","isRequired","defaultProps","Link"],"mappings":"iOAOO,KAAMA,GAA6BC,EAAnC,QAAA,cAAA,EAEMC,EAAyB,IACpCC,EAAAA,QAAAA,WAAWH,CAAD,EAECI,EAA8B,CAAC,CAAEC,cAAe,CACrD,KAAA,CAAEC,kBAAmBC,EAA3B,EACM,CAAEC,0BAA2BC,EAAnC,EAEMC,EAAqBC,EAAAA,QAAAA,QACzB,IACEC,EAAMC,OAAO,CACX,GAAGL,EAAuBM,SAC1BC,QAAU,GAAEP,EAAuBM,SAASC,yBAAyBT,GAFvE,CAAA,EAIF,CAACE,EAAwBF,CAAzB,CANgC,EAS5B,CAAEU,KAAMC,GAAwBC,EACpC,CAAC,sBAAuBV,EAAwBF,CAAhD,EACA,IAAMa,EAAgBX,EAAwBF,CAAzB,CAFuB,EAKxCc,EAAU,CACdH,sBACAP,oBAAAA,EAIA,MAAAW,GAAC,EAA2B,SAA5B,CAAqC,MAAOD,EAA5C,UAAA,CADF,CAKD,uFCnCD,WAAgDE,EAAO,CAC/C,KAAA,CAAEC,GAAIC,EAAWC,QAAOC,GAAcJ,EACtC,CAAEL,uBAAwBf,EAAhC,EAEA,SACG,EAAD,CAAA,GACMwB,EACJ,GAAK,kBAAiBT,EAAoBU,KAAKF,GAAAA,CAHnD,CAMD,CAEDG,EAAwBC,UAAY,CAClCN,GAAIO,EAAUC,QAAAA,YACdN,GAAIK,EAAAA,QAAUE,OAAOC,UAFa,EAKpCL,EAAwBM,aAAe,CACrCX,GAAIY,CADiC"}