{"version":3,"file":"Button.531711e8.js","sources":["../../../src/Components/design/Button/Button.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport \"./Button.css\";\n\nexport const ButtonVariant = {\n  Contained: \"contained\",\n  Outlined: \"outlined\",\n  Text: \"text\",\n  None: \"none\",\n  UserIcon: \"usericon\",\n  SignIn: \"signin\",\n  ModalCancelButton: \"modalcancelbutton\",\n};\nexport const ButtonColor = {\n  Primary: \"primary\",\n  Success: \"success\",\n  Error: \"error\",\n  Contrast: \"contrast\",\n};\n\nconst Button = React.forwardRef((props, ref) => {\n  const { variant, color, children, as: Component, ...restProps } = props;\n\n  return (\n    <Component\n      {...restProps}\n      ref={ref}\n      className={clsx(\n        props.className,\n        \"button\",\n        `button--${variant}`,\n        `button--${color}`,\n        props.disabled && \"button--disabled\"\n      )}\n    >\n      {Array.isArray(children)\n        ? children.map((child, index) => {\n            // Wrap text nodes in span for styling with icons.\n            if (typeof child === \"string\") {\n              return <span key={index}>{child}</span>;\n            }\n            return child;\n          })\n        : children}\n    </Component>\n  );\n});\n\nButton.propTypes = {\n  as: PropTypes.elementType,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  color: PropTypes.oneOf(Object.values(ButtonColor)),\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  tabIndex: PropTypes.number,\n  type: PropTypes.oneOf([\"button\", \"reset\", \"submit\"]),\n  variant: PropTypes.oneOf(Object.values(ButtonVariant)),\n};\n\nButton.defaultProps = {\n  as: \"button\",\n  color: ButtonColor.Primary,\n  disabled: false,\n  type: \"button\",\n  variant: ButtonVariant.Contained,\n};\n\nexport default Button;\n"],"names":["ButtonVariant","Contained","Outlined","Text","None","UserIcon","SignIn","ModalCancelButton","ButtonColor","Primary","Success","Error","Contrast","Button","React","forwardRef","props","ref","variant","color","children","as","Component","restProps","clsx","className","disabled","Array","isArray","map","child","index","propTypes","PropTypes","elementType","string","node","oneOf","Object","values","bool","onClick","func","tabIndex","number","type","defaultProps"],"mappings":"sIAKO,KAAMA,GAAgB,CAC3BC,UAAW,YACXC,SAAU,WACVC,KAAM,OACNC,KAAM,OACNC,SAAU,WACVC,OAAQ,SACRC,kBAAmB,mBAPQ,EAShBC,EAAc,CACzBC,QAAS,UACTC,QAAS,UACTC,MAAO,QACPC,SAAU,UAJe,EAOrBC,EAASC,EAAMC,WAAW,CAACC,EAAOC,IAAQ,CACxC,KAAA,CAAEC,UAASC,QAAOC,WAAUC,GAAIC,KAAcC,GAAcP,EAElE,SACG,EAAD,CAAA,GACMO,EACJ,MACA,UAAWC,EACTR,EAAMS,UACN,SACC,WAAUP,IACV,WAAUC,IACXH,EAAMU,UAAY,kBALL,EAHjB,SAWGC,MAAMC,QAAQR,CAAd,EACGA,EAASS,IAAI,CAACC,EAAOC,IAEf,MAAOD,IAAU,WACZ,OAAA,CAAA,SAAmBA,GAARC,CAAX,EAEFD,CALT,EAOAV,CAAAA,CApBR,CAuBD,CA1Bc,EA4BfP,EAAOmB,UAAY,CACjBX,GAAIY,EAAUC,QAAAA,YACdT,UAAWQ,EAAUE,QAAAA,OACrBf,SAAUa,EAAUG,QAAAA,KACpBjB,MAAOc,EAAUI,QAAAA,MAAMC,OAAOC,OAAO/B,CAAd,CAAhB,EACPkB,SAAUO,EAAUO,QAAAA,KACpBC,QAASR,EAAUS,QAAAA,KACnBC,SAAUV,EAAUW,QAAAA,OACpBC,KAAMZ,EAAUI,QAAAA,MAAM,CAAC,SAAU,QAAS,QAApB,CAAhB,EACNnB,QAASe,EAAUI,QAAAA,MAAMC,OAAOC,OAAOvC,CAAd,CAAhB,CATQ,EAYnBa,EAAOiC,aAAe,CACpBzB,GAAI,SACJF,MAAOX,EAAYC,QACnBiB,SAAU,GACVmB,KAAM,SACN3B,QAASlB,EAAcC,SALH,EAQtB,KAAA,GAAeY"}