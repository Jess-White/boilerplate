{"version":3,"file":"DropdownMenu.b6b4bec9.js","sources":["../../../src/Components/design/Dropdown/DropdownContext.js","../../../src/Components/design/Dropdown/DropdownMenuItem.jsx","../../../src/Components/design/Dropdown/DropdownMenu.jsx"],"sourcesContent":["import { createContext } from \"react\";\n\nconst DropdownContext = createContext();\n\nexport default DropdownContext;\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Button from \"../Button/Button\";\nimport DropdownContext from \"./DropdownContext\";\nimport \"./Dropdown.css\";\n\nexport default function DropdownMenuItem(props) {\n  const { option, index } = props;\n  const {\n    options,\n    selectedOption,\n    setSelectedOption,\n    focusedOption,\n    setFocusedOption,\n    isMenuOpen,\n    setIsMenuOpen,\n    labelId,\n  } = useContext(DropdownContext);\n  const menuItemButtonEl = useRef(null);\n  const isSelected = option === selectedOption;\n  const isFocused = option === focusedOption;\n\n  useEffect(() => {\n    if (isMenuOpen && isFocused) {\n      //eslint-disable-next-line\n      menuItemButtonEl?.current?.focus();\n    }\n  }, [isFocused, isMenuOpen]);\n\n  return (\n    <li\n      className={clsx(\n        \"dropdown__menu-item\",\n        isSelected && \"dropdown__menu-item--selected\"\n      )}\n      role=\"option\"\n      aria-selected={isSelected}\n    >\n      <Button\n        ref={menuItemButtonEl}\n        variant=\"none\"\n        aria-labelledby={labelId}\n        onClick={() => {\n          setSelectedOption(option);\n          setIsMenuOpen(false);\n        }}\n        onKeyDown={(event) => {\n          if (event.key === \"ArrowUp\" && index > 0) {\n            setFocusedOption(options[index - 1]);\n          } else if (event.key === \"ArrowDown\" && index < options.length - 1) {\n            setFocusedOption(options[index + 1]);\n          }\n        }}\n      >\n        {option.label}\n      </Button>\n    </li>\n  );\n}\n\nexport const optionPropType = PropTypes.shape({\n  value: PropTypes.any.isRequired,\n  label: PropTypes.string,\n});\n\nDropdownMenuItem.propTypes = {\n  option: optionPropType.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nDropdownMenuItem.defaultProps = {};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport DropdownMenuItem, { optionPropType } from \"./DropdownMenuItem\";\nimport \"./Dropdown.css\";\n\nexport default function DropdownMenu(props) {\n  const { options, className, ...restProps } = props;\n\n  return (\n    <ul\n      {...restProps}\n      className={clsx(className, \"dropdown__menu\")}\n      role=\"listbox\"\n    >\n      {options?.map((option, index) => (\n        <DropdownMenuItem key={index} option={option} index={index} />\n      ))}\n    </ul>\n  );\n}\n\nDropdownMenu.propTypes = {\n  options: PropTypes.arrayOf(optionPropType).isRequired,\n};\n\nDropdownMenu.defaultProps = {};\n"],"names":["createContext","props","option","index","options","selectedOption","setSelectedOption","focusedOption","setFocusedOption","isMenuOpen","setIsMenuOpen","labelId","useContext","DropdownContext","menuItemButtonEl","useRef","isSelected","isFocused","useEffect","current","focus","clsx","event","key","length","label","optionPropType","PropTypes","shape","value","any","isRequired","string","DropdownMenuItem","propTypes","number","defaultProps","className","restProps","map","DropdownMenu","arrayOf"],"mappings":"+KAEA,KAAM,GAAkBA,EAAa,QAAA,cAAA,EAErC,EAAe,ECGf,WAAyCC,EAAO,CACxC,KAAA,CAAEC,SAAQC,SAAUF,EACpB,CACJG,UACAC,iBACAC,oBACAC,gBACAC,mBACAC,aACAC,gBACAC,WACEC,EAAAA,QAAAA,WAAWC,CAAD,EACRC,EAAmBC,iBAAO,IAAD,EACzBC,EAAad,IAAWG,EACxBY,EAAYf,IAAWK,EAE7BW,SAAAA,QAAAA,UAAU,IAAM,OACd,AAAIT,GAAcQ,GAEhBH,qBAAkBK,UAAlBL,QAA2BM,QAC5B,EACA,CAACH,EAAWR,CAAZ,CALM,IAQP,KAAA,CACE,UAAWY,EACT,sBACAL,GAAc,+BAFD,EAIf,KAAK,SACL,gBAAeA,EANjB,WAQG,EAAD,CACE,IAAKF,EACL,QAAQ,OACR,kBAAiBH,EACjB,QAAS,IAAM,CACbL,EAAkBJ,CAAD,EACjBQ,EAAc,EAAD,CACd,EACD,UAAYY,AAAU,GAAA,CACpB,AAAIA,EAAMC,MAAQ,WAAapB,EAAQ,EACpBC,EAAAA,EAAQD,EAAQ,EAAjB,EACPmB,EAAMC,MAAQ,aAAepB,EAAQC,EAAQoB,OAAS,GAC9CpB,EAAAA,EAAQD,EAAQ,EAAjB,CAEnB,EAdH,SAgBGD,EAAOuB,KAAAA,CAhBV,CAAA,CATJ,CA6BD,CAEYC,KAAAA,GAAiBC,UAAUC,MAAM,CAC5CC,MAAOF,EAAAA,QAAUG,IAAIC,WACrBN,MAAOE,EAAUK,QAAAA,MAF2B,CAAhB,EAK9BC,EAAiBC,UAAY,CAC3BhC,OAAQwB,EAAeK,WACvB5B,MAAOwB,EAAAA,QAAUQ,OAAOJ,UAFG,EAK7BE,EAAiBG,aAAe,CAAA,qOCjEhC,WAAqCnC,EAAO,CACpC,KAAA,CAAEG,UAASiC,eAAcC,GAAcrC,EAE7C,kBAEQqC,EACJ,UAAWjB,EAAKgB,EAAW,gBAAZ,EACf,KAAK,UAHP,SAKGjC,iBAASmC,IAAI,CAACrC,EAAQC,MACpB,EAAD,CAA8B,SAAgB,OAA9C,EAAuBA,CAAvB,EADD,CANL,CAWD,CAEDqC,EAAaN,UAAY,CACvB9B,QAASuB,EAAAA,QAAUc,QAAQf,CAAlB,EAAkCK,UADpB,EAIzBS,EAAaJ,aAAe,CAAA"}