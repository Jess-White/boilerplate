{"version":3,"file":"AccordionItemPanel.eeabb390.js","sources":["../../../src/Components/design/Accordion/AccordionItem/AccordionItemContext.js","../../../src/Components/design/Accordion/AccordionItem/AccordionItem.jsx","../../../src/Components/design/Accordion/AccordionItem/AccordionItemHeader.jsx","../../../src/Components/design/Accordion/AccordionItem/AccordionItemPanel.jsx"],"sourcesContent":["import { createContext } from \"react\";\n\nconst AccordionItemContext = createContext();\n\nexport default AccordionItemContext;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { useId } from \"react-aria\";\nimport AccordionItemContext from \"./AccordionItemContext\";\nimport \"./AccordionItem.css\";\n\nexport default function AccordionItem(props) {\n  const { as: Component, className, children } = props;\n  const [expanded, setExpanded] = useState(false);\n  const state = {\n    expanded,\n    setExpanded,\n    headerId: useId(),\n    panelId: useId(),\n  };\n\n  return (\n    <AccordionItemContext.Provider value={state}>\n      <Component className={clsx(className, \"accordion-item\")}>\n        {children}\n      </Component>\n    </AccordionItemContext.Provider>\n  );\n}\n\nAccordionItem.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  as: PropTypes.node,\n};\n\nAccordionItem.defaultProps = {\n  as: \"div\",\n};\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { MdChevronRight, MdExpandMore } from \"react-icons/md\";\nimport AccordionItemContext from \"./AccordionItemContext\";\nimport Button from \"../../Button/Button\";\n\nexport default function AccordionItemHeader(props) {\n  const { heading: Heading, className, children } = props;\n  const { expanded, setExpanded, panelId, headerId } =\n    useContext(AccordionItemContext);\n  const Icon = expanded ? MdExpandMore : MdChevronRight;\n\n  return (\n    <Heading className={clsx(className, \"accordion-item__header\")}>\n      <Button\n        id={headerId}\n        variant=\"none\"\n        onClick={() => setExpanded(!expanded)}\n        aria-expanded={expanded}\n        aria-controls={panelId}\n        className={clsx(props.buttonClassName, \"accordion-item__header-button\")}\n      >\n        <Icon className=\"accordion-item__icon\" />\n        {children}\n      </Button>\n    </Heading>\n  );\n}\n\nAccordionItemHeader.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  heading: PropTypes.oneOf([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]),\n};\n\nAccordionItemHeader.defaultProps = {\n  heading: \"h1\",\n};\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport AccordionItemContext from \"./AccordionItemContext\";\n\nexport default function AccordionItemPanel(props) {\n  const { expanded, panelId, headerId } = useContext(AccordionItemContext);\n  const { className, children } = props;\n\n  return (\n    <section\n      id={panelId}\n      aria-labelledby={headerId}\n      hidden={!expanded}\n      className={clsx(className, \"accordion-item__panel\")}\n    >\n      {children}\n    </section>\n  );\n}\n\nAccordionItemPanel.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nAccordionItemPanel.defaultProps = {};\n"],"names":["createContext","props","as","Component","className","children","expanded","setExpanded","useState","state","headerId","useId","panelId","_jsx","AccordionItemContext","clsx","AccordionItem","propTypes","PropTypes","string","node","defaultProps","heading","Heading","useContext","Icon","MdExpandMore","MdChevronRight","buttonClassName","AccordionItemHeader","oneOf","AccordionItemPanel"],"mappings":"6QAEA,KAAM,GAAuBA,EAAa,QAAA,cAAA,EAE1C,EAAe,ECGf,WAAsCC,EAAO,CACrC,KAAA,CAAEC,GAAIC,EAAWC,YAAWC,YAAaJ,EACzC,CAACK,EAAUC,GAAeC,EAAAA,QAAAA,SAAS,EAAD,EAClCC,EAAQ,CACZH,WACAC,cACAG,SAAUC,EAHE,EAIZC,QAASD,EAAK,CAAA,EAId,MAAAE,GAACC,EAAqB,SAAtB,CAA+B,MAAOL,EAAtC,WACG,EAAD,CAAW,UAAWM,EAAKX,EAAW,gBAAZ,EAA1B,UAAA,CAAA,CAAA,CAFJ,CAOD,CAEDY,EAAcC,UAAY,CACxBb,UAAWc,EAAUC,QAAAA,OACrBd,SAAUa,EAAUE,QAAAA,KACpBlB,GAAIgB,EAAUE,QAAAA,IAHU,EAM1BJ,EAAcK,aAAe,CAC3BnB,GAAI,KADuB,kSCzB7B,WAA4CD,EAAO,CAC3C,KAAA,CAAEqB,QAASC,EAASnB,YAAWC,YAAaJ,EAC5C,CAAEK,WAAUC,cAAaK,UAASF,YACtCc,EAAAA,QAAAA,WAAWV,CAAD,EACNW,EAAOnB,EAAWoB,EAAeC,EAEvC,SACG,EAAD,CAAS,UAAWZ,EAAKX,EAAW,wBAAZ,EAAxB,WACG,EAAD,CACE,GAAIM,EACJ,QAAQ,OACR,QAAS,IAAMH,EAAY,CAACD,CAAF,EAC1B,gBAAeA,EACf,gBAAeM,EACf,UAAWG,EAAKd,EAAM2B,gBAAiB,+BAAxB,EANjB,SAAA,CAQEf,EAAC,EAAD,CAAM,UAAU,sBAAhB,CAAA,EACCR,CATH,CAAA,CAAA,CAAA,CAFJ,CAeD,CAEDwB,EAAoBZ,UAAY,CAC9Bb,UAAWc,EAAUC,QAAAA,OACrBd,SAAUa,EAAUE,QAAAA,KACpBE,QAASJ,EAAAA,QAAUY,MAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,IAA/B,CAAhB,CAHqB,EAMhCD,EAAoBR,aAAe,CACjCC,QAAS,IADwB,sdC/BnC,WAA2CrB,EAAO,CAC1C,KAAA,CAAEK,WAAUM,UAASF,YAAac,EAAAA,QAAAA,WAAWV,CAAD,EAC5C,CAAEV,YAAWC,YAAaJ,EAEhC,SACE,UAAA,CACE,GAAIW,EACJ,kBAAiBF,EACjB,OAAQ,CAACJ,EACT,UAAWS,EAAKX,EAAW,uBAAZ,EAJjB,UAAA,CADF,CAUD,CAED2B,EAAmBd,UAAY,CAC7Bb,UAAWc,EAAUC,QAAAA,OACrBd,SAAUa,EAAUE,QAAAA,IAFS,EAK/BW,EAAmBV,aAAe,CAAA"}